- name: Create Quay Repository
  gather_facts: no
  hosts: localhost
  vars:
    path_quay_org: /var/secrets/quay-rfe-setup/org
    path_quay_password: /var/secrets/quay-rfe-setup/password
    path_quay_username: /var/secrets/quay-rfe-setup/username
    path_publisher: /var/secrets/publisher/.dockerconfigjson
    quay_setup_secret_name: quay-rfe-setup
    quay_setup_secret_namespace: rfe
  tasks:
    - name: Assert Extra Variables are Defined
      ansible.builtin.assert:
        fail_msg: >
          Make sure the following extra variables are defined before running this playbook:
            - quay_image_path_output_file
            - quay_repository_name
            - quay_setup_secret_name
            - quay_setup_secret_namespace
        that:
          - quay_image_path_output_file is defined
          - quay_repository_name is defined
          - quay_setup_secret_name is defined
          - quay_setup_secret_namespace is defined

    - name: Make Sure Secrets are Properly Mounted
      ansible.builtin.stat:
        follow: yes
        get_checksum: no
        get_mime: no
        path: "{{ item }}"
      loop:
        - "{{ path_quay_org }}"
        - "{{ path_quay_password }}"
        - "{{ path_quay_username }}"
        - "{{ path_publisher }}"
      register: stat_results

    - name: Make Sure Paths Exist
      ansible.builtin.assert:
        that:
          - item.stat.exists is defined
          - item.stat.readable is defined
          - item.stat.exists == true
          - item.stat.readable == true
      loop: "{{ stat_results.results }}"

    - name: Define Quay Organization/Credentials
      ansible.builtin.set_fact:
        quay_organization: "{{ lookup('file', path_quay_org) }}"
        quay_password: "{{ lookup('file', path_quay_password) }}"
        quay_username: "{{ lookup('file', path_quay_username) }}"

    - name: Read .dockerconfigjson From Publisher Secret
      ansible.builtin.set_fact:
        publisher_dcj: "{{ lookup('file', path_publisher) }}"

    - name: Assert Only One Registry Exists in .dockerconfigjson
      ansible.builtin.assert:
        that:
          - publisher_dcj.auths is defined
          - publisher_dcj.auths | count == 1

    - name: Define Registry Endpoint
      ansible.builtin.set_fact:
        quay_endpoint: "{{ publisher_dcj.auths.keys() | first }}"

    - name: Define Registry Auth
      ansible.builtin.set_fact:
        quay_auth: "{{ publisher_dcj['auths'][quay_endpoint].auth | b64decode }}"

    - name: Define Quay Registry Robot Credentials
      ansible.builtin.set_fact:
        quay_robot: "{{ quay_auth.split(':')[0] }}"
        quay_token: "{{ quay_auth.split(':')[1] }}"

    - name: Create RFE Repository
      vars:
        quay_api_body:
          description: "Generated by RFE Pipeline on {{ now('%Y-%m-%d %H:%M:%S') }}"
          namespace: "{{ quay_organization }}"
          repo_kind: image
          repository: "{{ quay_repository_name }}"
          visibility: private
        quay_api_status_codes:
          - 201
          - 400
        quay_api_uri:
          "/api/v1/repository"
        quay_api_verb: POST
        quay_rfe_password: "{{ quay_password }}"
        quay_rfe_username: "{{ quay_username }}"
        quay_route: "https://{{ quay_endpoint }}"
      ansible.builtin.include_role:
        name: quay-raw-api

    - name: "Check for Failure Conditions for Task: Create RFE Repository"
      ansible.builtin.fail:
        msg: "Create RFE Organization Failed"
      when:
        - quay_api_response.status != 201
        - '"Repository already exists" not in quay_api_response.json.error_message'

    - name: Add RFE Robot Account Permissions to RFE Repository
      vars:
        quay_api_body:
          role: write
        quay_api_status_codes:
          - 200
        quay_api_uri: "/api/v1/repository/{{ quay_organization }}/{{ quay_repository_name }}/permissions/user/{{ quay_robot }}"
        quay_api_verb: PUT
        quay_rfe_password: "{{ quay_password }}"
        quay_rfe_username: "{{ quay_username }}"
        quay_route: "https://{{ quay_endpoint }}"
      ansible.builtin.include_role:
        name: quay-raw-api

    - name: Save Quay Image Path to File
      ansible.builtin.copy:
        content: "{{ quay_endpoint }}/{{ quay_organization }}/{{ quay_repository_name }}"
        dest: "{{ quay_image_path_output_file }}"
